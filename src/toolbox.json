{
  "name": "BambiSleep Church MCP Toolbox",
  "version": "1.0.0",
  "description": "MCP Server tooling for smolagents integration with Bambi Sleep Church platform",
  "tools": {
    "linkManager": {
      "name": "Link Manager",
      "description": "Manages links, categories, and voting functionality",
      "methods": {
        "addLink": {
          "description": "Add a new link to the collection",
          "parameters": {
            "type": "object",
            "properties": {
              "id": { "type": "string", "description": "Unique link identifier" },
              "title": { "type": "string", "description": "Link title" },
              "url": { "type": "string", "description": "Link URL" },
              "category": { "type": "string", "description": "Link category" },
              "description": { "type": "string", "description": "Link description" }
            },
            "required": ["id", "title", "url"]
          },
          "returns": { "type": "object", "description": "Created link object" }
        },
        "getLink": {
          "description": "Get link by ID",
          "parameters": {
            "type": "object",
            "properties": {
              "id": { "type": "string", "description": "Link ID" }
            },
            "required": ["id"]
          },
          "returns": { "type": "object", "description": "Link object or null" }
        },
        "getLinks": {
          "description": "Get all links, optionally filtered by category",
          "parameters": {
            "type": "object",
            "properties": {
              "category": { "type": "string", "description": "Filter by category" }
            }
          },
          "returns": { "type": "array", "description": "Array of link objects" }
        },
        "voteLink": {
          "description": "Vote on a link",
          "parameters": {
            "type": "object",
            "properties": {
              "id": { "type": "string", "description": "Link ID" },
              "voteValue": { "type": "number", "description": "Vote value (default: 1)" }
            },
            "required": ["id"]
          },
          "returns": { "type": "object", "description": "Updated link object" }
        },
        "searchLinks": {
          "description": "Search links by title or description",
          "parameters": {
            "type": "object",
            "properties": {
              "query": { "type": "string", "description": "Search query" }
            },
            "required": ["query"]
          },
          "returns": { "type": "array", "description": "Array of matching links" }
        }
      }
    },
    "analytics": {
      "name": "Analytics",
      "description": "Tracks events, sessions, and provides analytics data",
      "methods": {
        "trackEvent": {
          "description": "Track a user event",
          "parameters": {
            "type": "object",
            "properties": {
              "type": { "type": "string", "description": "Event type" },
              "userId": { "type": "string", "description": "User ID" },
              "data": { "type": "object", "description": "Event data" }
            },
            "required": ["type"]
          },
          "returns": { "type": "object", "description": "Tracked event object" }
        },
        "trackSession": {
          "description": "Track user session",
          "parameters": {
            "type": "object",
            "properties": {
              "userId": { "type": "string", "description": "User ID" },
              "action": { "type": "string", "enum": ["start", "end"], "description": "Session action" }
            },
            "required": ["action"]
          },
          "returns": { "type": "object", "description": "Session object" }
        },
        "getSummary": {
          "description": "Get analytics summary",
          "parameters": {
            "type": "object",
            "properties": {
              "timeRange": { "type": "string", "description": "Time range (e.g., '24h', '7d', '1w')" }
            }
          },
          "returns": { "type": "object", "description": "Analytics summary" }
        }
      }
    },
    "contentManager": {
      "name": "Content Manager",
      "description": "Handles content creation, templates, and management",
      "methods": {
        "setContent": {
          "description": "Create or update content",
          "parameters": {
            "type": "object",
            "properties": {
              "id": { "type": "string", "description": "Content ID" },
              "type": { "type": "string", "description": "Content type" },
              "title": { "type": "string", "description": "Content title" },
              "body": { "type": "string", "description": "Content body" },
              "metadata": { "type": "object", "description": "Content metadata" }
            },
            "required": ["id", "type"]
          },
          "returns": { "type": "object", "description": "Content object" }
        },
        "getContent": {
          "description": "Get content by ID",
          "parameters": {
            "type": "object",
            "properties": {
              "id": { "type": "string", "description": "Content ID" }
            },
            "required": ["id"]
          },
          "returns": { "type": "object", "description": "Content object or null" }
        },
        "getContentByType": {
          "description": "Get content by type",
          "parameters": {
            "type": "object",
            "properties": {
              "type": { "type": "string", "description": "Content type" }
            },
            "required": ["type"]
          },
          "returns": { "type": "array", "description": "Array of content objects" }
        },
        "searchContent": {
          "description": "Search content",
          "parameters": {
            "type": "object",
            "properties": {
              "query": { "type": "string", "description": "Search query" },
              "type": { "type": "string", "description": "Filter by content type" }
            },
            "required": ["query"]
          },
          "returns": { "type": "array", "description": "Array of matching content" }
        },
        "saveTemplate": {
          "description": "Save template",
          "parameters": {
            "type": "object",
            "properties": {
              "id": { "type": "string", "description": "Template ID" },
              "name": { "type": "string", "description": "Template name" },
              "content": { "type": "string", "description": "Template content" },
              "variables": { "type": "array", "description": "Template variables" }
            },
            "required": ["id", "name", "content"]
          },
          "returns": { "type": "object", "description": "Template object" }
        },
        "generatePage": {
          "description": "Generate page content with template",
          "parameters": {
            "type": "object",
            "properties": {
              "templateId": { "type": "string", "description": "Template ID" },
              "data": { "type": "object", "description": "Template data" }
            },
            "required": ["templateId"]
          },
          "returns": { "type": "string", "description": "Rendered content" }
        }
      }
    }
  },
  "endpoints": {
    "execute": {
      "path": "/toolbox/execute",
      "method": "POST",
      "description": "Execute a tool method",
      "parameters": {
        "type": "object",
        "properties": {
          "tool": { "type": "string", "description": "Tool name" },
          "method": { "type": "string", "description": "Method name" },
          "params": { "type": "object", "description": "Method parameters" }
        },
        "required": ["tool", "method"]
      }
    },
    "tools": {
      "path": "/toolbox/tools",
      "method": "GET",
      "description": "Get available tools and their information"
    },
    "health": {
      "path": "/toolbox/health",
      "method": "GET",
      "description": "Check toolbox health status"
    }
  },
  "config": {
    "autoRegister": true,
    "enableLogging": true,
    "enableCaching": false,
    "maxCacheSize": 1000,
    "logLevel": "info"
  },
  "smolagents": {
    "compatibility": "1.0",
    "features": [
      "real-time-updates",
      "link-management",
      "analytics-tracking",
      "content-management",
      "template-system"
    ],
    "integration": {
      "socketio": true,
      "express": true,
      "mcp": true
    }
  }
}
